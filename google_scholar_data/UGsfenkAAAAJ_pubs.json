{
    "columns":[
        "abstract",
        "title",
        "author",
        "pub_year",
        "author_pub_id",
        "num_citations",
        "pub_url",
        "cites_id",
        "citedby_url",
        "cites_per_year"
    ],
    "index":[
        0,
        1,
        2,
        3,
        4,
        5
    ],
    "data":[
        [
            "We discuss the theoretical bases that underpin the automation of the computations of tree-level and next-to-leading order cross sections, of their matching to parton shower simulations, and of the merging of matched samples that differ by light-parton multiplicities. We present a computer program, MadGraph5 aMC@ NLO, capable of handling all these computations\u2014parton-level fixed order, shower-matched, merged\u2014in a unified framework whose defining features are flexibility, high level of parallelisation, and human intervention limited to input physics quantities. We demonstrate the potential of the program by presenting selected phenomenological applications relevant to the LHC and to a 1-TeV e+ e\u2212 collider. While next-to-leading order results are restricted to QCD corrections to SM processes in the first public version, we show that from the user viewpoint no changes have to be expected in the case of \u2026",
            "The automated computation of tree-level and next-to-leading order differential cross sections, and their matching to parton shower simulations",
            "Johan Alwall and R Frederix and S Frixione and V Hirschi and Fabio Maltoni and Olivier Mattelaer and H-S Shao and T Stelzer and P Torrielli and M Zaro",
            "2014",
            "UGsfenkAAAAJ:eQOLeE2rZwMC",
            8955,
            "https:\/\/link.springer.com\/content\/pdf\/10.1007\/JHEP07(2014)079.pdf",
            "16437276722452719534",
            "\/scholar?cites=16437276722452719534",
            {
                "2014":177,
                "2015":725,
                "2016":1320,
                "2017":1633,
                "2018":2081,
                "2019":1556,
                "2020":1348,
                "2021":71
            }
        ],
        [
            "M ad G raph 5 is the new version of the M ad G raph matrix element generator, written in the Python programming language. It implements a number of new, efficient algorithms that provide improved performance and functionality in all aspects of the program. It features a new user interface, several new output formats including C++ process libraries for P ythia 8, and full compatibility with F eyn R ules for new physics models implementation, allowing for event generation for any model that can be written in the form of a Lagrangian. M ad G raph 5 builds on the same philosophy as the previous versions, and its design allows it to be used as a collaborative platform where theoretical, phenomenological and simulation projects can be developed and then distributed to the high-energy community. We describe the ideas and the most important developments of the code and illustrate its capabilities through a few simple \u2026",
            "MadGraph 5: going beyond",
            "Johan Alwall and Michel Herquet and Fabio Maltoni and Olivier Mattelaer and Tim Stelzer",
            "2011",
            "UGsfenkAAAAJ:vV6vV6tmYwMC",
            5421,
            "https:\/\/link.springer.com\/content\/pdf\/10.1007\/JHEP06(2011)128.pdf",
            "13012285282652263722",
            "\/scholar?cites=13012285282652263722",
            {
                "2011":55,
                "2012":463,
                "2013":798,
                "2014":901,
                "2015":964,
                "2016":824,
                "2017":508,
                "2018":394,
                "2019":253,
                "2020":228,
                "2021":13
            }
        ],
        [
            "M ad G raph 5 is the new version of the M ad G raph matrix element generator, written in the Python programming language. It implements a number of new, efficient algorithms that provide improved performance and functionality in all aspects of the program. It features a new user interface, several new output formats including C++ process libraries for P ythia 8, and full compatibility with F eyn R ules for new physics models implementation, allowing for event generation for any model that can be written in the form of a Lagrangian. M ad G raph 5 builds on the same philosophy as the previous versions, and its design allows it to be used as a collaborative platform where theoretical, phenomenological and simulation projects can be developed and then distributed to the high-energy community. We describe the ideas and the most important developments of the code and illustrate its capabilities through a few simple \u2026",
            "MadGraph 5: going beyond",
            "Johan Alwall and Michel Herquet and Fabio Maltoni and Olivier Mattelaer and Tim Stelzer",
            "2011",
            "UGsfenkAAAAJ:u5HHmVD_uO8C",
            5421,
            "https:\/\/link.springer.com\/content\/pdf\/10.1007\/JHEP06(2011)128.pdf",
            "13012285282652263722",
            "\/scholar?cites=13012285282652263722",
            {
                "2011":55,
                "2012":463,
                "2013":798,
                "2014":901,
                "2015":964,
                "2016":824,
                "2017":508,
                "2018":394,
                "2019":253,
                "2020":228,
                "2021":13
            }
        ],
        [
            "We present the latest developments of the MadGraph\/MadEvent Monte Carlo event generator and several applications to hadron collider physics. In the current version events at the parton, hadron and detector level can be generated directly from a web interface, for arbitrary processes in the Standard Model and in several physics scenarios beyond it (HEFT, MSSM, 2HDM). The most important additions are: a new framework for implementing user-defined new physics models; a standalone running mode for creating and testing matrix elements; generation of events corresponding to different processes, such as signal (s) and backgrounds, in the same run; two platforms for data analysis, where events are accessible at the parton, hadron and detector level; and the generation of inclusive multi-jet samples by combining parton-level events with parton showers. To illustrate the new capabilities of the package some \u2026",
            "MadGraph\/MadEvent v4: the new web generation",
            "Johan Alwall and Pavel Demin and Simon De Visscher and Rikkert Frederix and Michel Herquet and Fabio Maltoni and Tilman Plehn and David L Rainwater and Tim Stelzer",
            "2007",
            "UGsfenkAAAAJ:u-x6o8ySG0sC",
            2563,
            "https:\/\/iopscience.iop.org\/article\/10.1088\/1126-6708\/2007\/09\/028\/meta",
            "10222538132358734276",
            "\/scholar?cites=10222538132358734276",
            {
                "2007":13,
                "2008":90,
                "2009":173,
                "2010":254,
                "2011":509,
                "2012":525,
                "2013":348,
                "2014":191,
                "2015":155,
                "2016":130,
                "2017":61,
                "2018":48,
                "2019":31,
                "2020":24,
                "2021":2
            }
        ],
        [
            "We present a new multi-channel integration method and its implementation in the multi-purpose event generator MadEvent, which is based on MadGraph. Given a process, MadGraph automatically identifies all the relevant subprocesses, generates both the amplitudes and the mappings needed for an efficient integration over the phase space, and passes them to MadEvent. As a result, a process-specific, stand-alone code is produced that allows the user to calculate cross sections and produce unweighted events in a standard output format. Several examples are given for processes that are relevant for physics studies at present and forthcoming colliders.",
            "MadEvent: Automatic event generation with MadGraph",
            "Fabio Maltoni and Tim Stelzer",
            "2003",
            "UGsfenkAAAAJ:d1gkVwhDpl0C",
            1798,
            "https:\/\/iopscience.iop.org\/article\/10.1088\/1126-6708\/2003\/02\/027\/meta",
            "12370215454251202297",
            "\/scholar?cites=12370215454251202297",
            {
                "2003":26,
                "2004":54,
                "2005":72,
                "2006":116,
                "2007":113,
                "2008":192,
                "2009":154,
                "2010":162,
                "2011":194,
                "2012":164,
                "2013":124,
                "2014":88,
                "2015":84,
                "2016":97,
                "2017":55,
                "2018":37,
                "2019":28,
                "2020":22,
                "2021":2
            }
        ],
        [
            "The program MadGraph is presented which automatically generates postscript Feynman diagrams and Fortran code to calculate arbitrary tree level helicity amplitudes by calling HELAS[1] subroutines. The program is written in Fortran and is available in Unix and VMS versions. MadGraph currently includes standard model interactions of QCD and QFD, but is easily modified to include additional models such as supersymmetry.",
            "Automatic generation of tree level helicity amplitudes",
            "Tim Stelzer and WF Long",
            "1994",
            "UGsfenkAAAAJ:9yKSN-GCB0IC",
            1416,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/0010465594900841",
            "16946568098966752160",
            "\/scholar?cites=16946568098966752160",
            {
                "1994":5,
                "1995":27,
                "1996":42,
                "1997":36,
                "1998":36,
                "1999":48,
                "2000":35,
                "2001":41,
                "2002":47,
                "2003":56,
                "2004":68,
                "2005":58,
                "2006":81,
                "2007":75,
                "2008":122,
                "2009":74,
                "2010":95,
                "2011":79,
                "2012":100,
                "2013":65,
                "2014":49,
                "2015":37,
                "2016":38,
                "2017":30,
                "2018":17,
                "2019":7,
                "2020":14,
                "2021":4
            }
        ]
    ]
}