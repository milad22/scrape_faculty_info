{
    "columns":[
        "abstract",
        "title",
        "author",
        "pub_year",
        "author_pub_id",
        "num_citations",
        "pub_url",
        "cites_id",
        "citedby_url",
        "cites_per_year"
    ],
    "index":[
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
    ],
    "data":[
        [
            "In a previous study, we reported on a systematic literature review (SLR), based on a manual search of 13 journals and conferences undertaken in the period 1st January 2004 to 30th June 2007.The aim of this on-going research is to provide an annotated catalogue of SLRs available to software engineering researchers and practitioners. This study updates our previous study using a broad automated search.We performed a broad automated search to find SLRs published in the time period 1st January 2004 to 30th June 2008. We contrast the number, quality and source of these SLRs with SLRs found in the original study.Our broad search found an additional 35 SLRs corresponding to 33 unique studies. Of these papers, 17 appeared relevant to the undergraduate educational curriculum and 12 appeared of possible interest to practitioners. The number of SLRs being published is \u2026",
            "Systematic literature reviews in software engineering\u2013a tertiary study",
            "Barbara Kitchenham and Rialette Pretorius and David Budgen and O Pearl Brereton and Mark Turner and Mahmood Niazi and Stephen Linkman",
            "2010",
            "5nWl5G4AAAAJ:IjCSPb-OGe4C",
            742,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0950584910000467",
            "8543740193074692352",
            "\/scholar?cites=8543740193074692352",
            {
                "2009":2,
                "2010":5,
                "2011":17,
                "2012":37,
                "2013":27,
                "2014":50,
                "2015":72,
                "2016":60,
                "2017":78,
                "2018":96,
                "2019":125,
                "2020":136,
                "2021":14
            }
        ],
        [
            "Different advances have been made in the development of software process improvement (SPI) standards and models, e.g. capability maturity model (CMM), more recently CMMI, and ISO's SPICE. However, these advances have not been matched by equal advances in the adoption of these standards and models in software development which has resulted in limited success for many SPI efforts. The current problem with SPI is not a lack of standard or model, but rather a lack of an effective strategy to successfully implement these standards or models. The importance of SPI implementation demands that it be recognised as a complex process in its own right and that organizations should determine their SPI implementation maturity through an organized set of activities. In the literature, much attention has been paid to \u201cwhat activities to implement\u201d instead of \u201chow to implement\u201d these activities. We believe that \u2026",
            "A maturity model for the implementation of software process improvement: an empirical study",
            "Mahmood Niazi and David Wilson and Didar Zowghi",
            "2005",
            "5nWl5G4AAAAJ:u5HHmVD_uO8C",
            390,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0164121203002711",
            "3184355394607082589",
            "\/scholar?cites=3184355394607082589",
            {
                "2004":6,
                "2005":5,
                "2006":20,
                "2007":23,
                "2008":28,
                "2009":25,
                "2010":43,
                "2011":18,
                "2012":30,
                "2013":32,
                "2014":29,
                "2015":20,
                "2016":29,
                "2017":23,
                "2018":26,
                "2019":12,
                "2020":16
            }
        ],
        [
            "This paper explores why organizations do not adopt CMMI (Capability Maturity Model Integration), by analysing two months of sales data collected by an Australian company selling CMMI appraisal and improvement services. The most frequent reasons given by organizations were: the organization was small; the services were too costly, the organization had no time, and the organization was using another SPI approach. Overall, we found small organizations not adopting CMMI tend to say that adopting it would be infeasible, but do not say it would be unbeneficial. We comment on the significance of our findings and research method for SPI research.",
            "An exploratory study of why organizations do not adopt CMMI",
            "Mark Staples and Mahmood Niazi and Ross Jeffery and Alan Abrahams and Paul Byatt and Russell Murphy",
            "2007",
            "5nWl5G4AAAAJ:u-x6o8ySG0sC",
            361,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0164121206002573",
            "14229266631529825831",
            "\/scholar?cites=14229266631529825831",
            {
                "2007":7,
                "2008":30,
                "2009":29,
                "2010":40,
                "2011":20,
                "2012":27,
                "2013":36,
                "2014":32,
                "2015":27,
                "2016":27,
                "2017":25,
                "2018":19,
                "2019":23,
                "2020":7,
                "2021":1
            }
        ],
        [
            "In this article, we present findings from our recent empirical study of the critical success factors (CSFs) for software process improvement (SPI) implementation with 34 SPI practitioners. The objective of this study is to provide SPI practitioners with sufficient knowledge about the nature of issues that play a positive role in the implementation of SPI programmes in order to assist them in effectively planning SPI implementation strategies.Through our empirical study we identified seven factors (higher management support, training, awareness, allocation of resources, staff involvement, experienced staff and defined SPI implementation methodology) that are generally considered critical for successfully implementing SPI. We also report on a literature survey of CSFs that impact SPI and identify six factors (senior management commitment, staff involvement, staff time and resources, training and mentoring, creating process \u2026",
            "Critical success factors for software process improvement implementation: an empirical study",
            "Mahmood Niazi and David Wilson and Didar Zowghi",
            "2006",
            "5nWl5G4AAAAJ:d1gkVwhDpl0C",
            297,
            "https:\/\/onlinelibrary.wiley.com\/doi\/abs\/10.1002\/spip.261",
            "17851978208416040334",
            "\/scholar?cites=17851978208416040334",
            {
                "2005":1,
                "2006":2,
                "2007":14,
                "2008":16,
                "2009":16,
                "2010":26,
                "2011":17,
                "2012":23,
                "2013":23,
                "2014":22,
                "2015":27,
                "2016":20,
                "2017":21,
                "2018":22,
                "2019":22,
                "2020":24
            }
        ],
        [
            "Systematic review is a method to identify, assess and analyse published primary studies to investigate research questions. We critique recently published guidelines for performing systematic reviews on software engineering, and comment on systematic review generally with respect to our experience conducting one. Overall we recommend the guidelines. We recommend researchers clearly and narrowly define research questions to reduce overall effort, and to improve selection and data extraction. We suggest that \u201ccomplementary\u201d research questions can help clarify the main questions and define selection criteria. We show our project timeline, and discuss possibilities for automating and increasing the acceptance of systematic review.",
            "Experiences using systematic review guidelines",
            "Mark Staples and Mahmood Niazi",
            "2007",
            "5nWl5G4AAAAJ:2osOgNQ5qMEC",
            294,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0164121206002962",
            "14758026791780811898",
            "\/scholar?cites=14758026791780811898",
            {
                "2006":1,
                "2007":4,
                "2008":11,
                "2009":13,
                "2010":18,
                "2011":15,
                "2012":26,
                "2013":15,
                "2014":18,
                "2015":28,
                "2016":27,
                "2017":25,
                "2018":29,
                "2019":24,
                "2020":31,
                "2021":1
            }
        ],
        [
            "Background: Software Process Improvement (SPI) is intended to improve software engineering, but can only be effective if used. To improve SPI\u2019s uptake, we should understand why organizations adopt SPI. CMM-based SPI approaches are widely known and studied. Objective: We investigated why organizations adopt CMM-based SPI approaches, and how these motivations relate to organizations\u2019 size. Method: We performed a systematic review, examining reasons reported in more than forty primary studies. Results: Reasons usually related to product quality and project performance, and less commonly, to process. Organizations reported customer reasons infrequently and employee reasons very rarely. We could not show that reasons related to size. Conclusion: Despite its origins in helping to address customer-related issues for the USAF, CMM-based SPI has mostly been adopted to help organizations \u2026",
            "Systematic review of organizational motivations for adopting CMM-based SPI",
            "Mark Staples and Mahmood Niazi",
            "2008",
            "5nWl5G4AAAAJ:qjMakFHDy7sC",
            189,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0950584907000778",
            "14831048305439200443",
            "\/scholar?cites=14831048305439200443",
            {
                "2007":5,
                "2008":8,
                "2009":13,
                "2010":17,
                "2011":11,
                "2012":21,
                "2013":14,
                "2014":17,
                "2015":21,
                "2016":13,
                "2017":18,
                "2018":6,
                "2019":12,
                "2020":9,
                "2021":1
            }
        ],
        [
            "Offshore software development outsourcing is a modern business strategy for developing high quality software at low cost.The objective of this research paper is to identify and analyse factors that are important in terms of the competitiveness of vendor organisations in attracting outsourcing projects.We performed a systematic literature review (SLR) by applying our customised search strings which were derived from our research questions. We performed all the SLR steps, such as the protocol development, initial selection, final selection, quality assessment, data extraction and data synthesis.We have identified factors such as cost-saving, skilled human resource, appropriate infrastructure, quality of product and services, efficient outsourcing relationships management, and an organisation's track record of successful projects which are generally considered important by the \u2026",
            "Factors influencing clients in the selection of offshore software outsourcing vendors: An exploratory study using a systematic literature review",
            "Siffat Ullah Khan and Mahmood Niazi and Rashid Ahmad",
            "2011",
            "5nWl5G4AAAAJ:_FxGoFyzp5QC",
            184,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0164121210003298",
            "66290562325885354",
            "\/scholar?cites=66290562325885354",
            {
                "2010":2,
                "2011":10,
                "2012":15,
                "2013":18,
                "2014":16,
                "2015":23,
                "2016":21,
                "2017":18,
                "2018":15,
                "2019":15,
                "2020":26,
                "2021":1
            }
        ],
        [
            "Software development outsourcing is a contract-based relationship between client and vendor organisations in which a client contracts out all or part of its software development activities to a vendor, who provides agreed services for remuneration.The objective is to identify various barriers that have a negative impact on software outsourcing clients in the selection process of offshore software development outsourcing vendors.We have performed a systematic literature review (SLR) process for the identification of barriers. We have performed all the SLR steps such as the protocol development, initial selection, final selection, quality assessment, data extraction and data synthesis.We have identified barriers such as \u2018language and cultural barriers\u2019, \u2018country instability\u2019, \u2018lack of project management\u2019, \u2018lack of protection for intellectual property rights\u2019 and \u2018lack of technical capability\u2019 that \u2026",
            "Barriers in the selection of offshore software development outsourcing vendors: An exploratory study using a systematic literature review",
            "Siffat Ullah Khan and Mahmood Niazi and Rashid Ahmad",
            "2011",
            "5nWl5G4AAAAJ:kNdYIx-mwKoC",
            177,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0950584910001527",
            "2699473345662356612",
            "\/scholar?cites=2699473345662356612",
            {
                "2010":2,
                "2011":5,
                "2012":16,
                "2013":18,
                "2014":16,
                "2015":25,
                "2016":16,
                "2017":17,
                "2018":18,
                "2019":14,
                "2020":22,
                "2021":3
            }
        ],
        [
            "A number of advances have been made in the development of software process improvement (SPI) standards and models, e.g. Capability Maturity Model (CMM), more recently CMMI, and ISO\u2019s SPICE. However, these advances have not been matched by equal advances in the adoption of these standards and models in software development which hasresulted in limited success for many SPI efforts. The current problem with SPI is not a lack of standards or models, but rather a lack of an effective strategy to successfully implement these standards or models.In this paper we have focused on SPI implementation issues and designed three individual components in order to assist SPI practitioners in the design of effective SPI implementation initiatives. We have pulled together individual components under one SPI implementation framework (SPI-IF) using a bottom-up approach already familiar to many practitioners \u2026",
            "A framework for assisting the design of effective software process improvement implementation strategies",
            "Mahmood Niazi and David Wilson and Didar Zowghi",
            "2005",
            "5nWl5G4AAAAJ:9yKSN-GCB0IC",
            156,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0164121204001475",
            "2061213712552187512",
            "\/scholar?cites=2061213712552187512",
            {
                "2004":1,
                "2005":2,
                "2006":7,
                "2007":12,
                "2008":20,
                "2009":8,
                "2010":15,
                "2011":7,
                "2012":12,
                "2013":9,
                "2014":10,
                "2015":14,
                "2016":5,
                "2017":12,
                "2018":8,
                "2019":7,
                "2020":5
            }
        ],
        [
            "ContextThere is extensive interest in global software development (GSD) which has led to a large number of papers reporting on GSD. A number of systematic literature reviews (SLRs) have attempted to aggregate information from individual studies.We wish to investigate GSD SLR research with a focus on discovering what research has been conducted in the area and to determine if the SLRs furnish appropriate risk and risk mitigation advice to provide guidance to organizations involved with GSD.We performed a broad automated search to identify GSD SLRs. Data extracted from each study included: (1) authors, their affiliation and publishing venue, (2) SLR quality, (3) research focus, (4) GSD risks, (5) risk mitigation strategies and, (6) for each SLR the number of primary studies reporting each risk and risk mitigation strategy.We found a total of 37 papers reporting 24 unique GSD SLR \u2026",
            "Risks and risk mitigation in global software development: A tertiary study",
            "June M Verner and O Pearl Brereton and Barbara A Kitchenham and Mahmood Turner and Mahmood Niazi",
            "2014",
            "5nWl5G4AAAAJ:RYcK_YlVTxYC",
            154,
            "https:\/\/www.sciencedirect.com\/science\/article\/pii\/S0950584913001341",
            "5022546190065013155",
            "\/scholar?cites=5022546190065013155",
            {
                "2013":1,
                "2014":12,
                "2015":29,
                "2016":15,
                "2017":19,
                "2018":29,
                "2019":23,
                "2020":20,
                "2021":3
            }
        ]
    ]
}